// Import Global Rules
@use "./sass/layout/global-rules";

// Import Pages
@use "./sass/pages/contact";

// Import Variables
@use "./sass/variables/colors";

// Import Mixins
@use "./sass/helpers/mixins" as *;

// Global Variable
$alt-color: green;

.header {
  color: $alt-color;
}

.footer {
  $alt-color: black;
  background-color: $alt-color;
}

// .sidebar {
//   background-color: colors.$main;
//   color: colors.$alt;
// }

$max_mobile: "max-width: 767px";

@media ($max_mobile) {
  .sidebar {
    padding: 20px;
  }
}

// Nesting & Parent Element

.parent {
  font-weight: bold;
  .child {
    font-size: 20px;
    .grand-child {
      font-size: 15px;
    }
  }
}

.parent-one,
.parent-two {
  padding: 20px;
  .child {
    padding: 10px;
  }
}

.parent > {
  .child {
    font-size: 20px;
  }
  .test {
    font-weight: bold;
  }
}

.parent {
  > {
    .element-one {
      font-size: 10px;
    }
    .element-two {
      font-size: 10px;
    }
  }
  .not-direct-child {
    font-weight: bold;
  }
}

.box {
  .title {
    font-size: 10px;
  }
  .description {
    font-size: 8px;
  }
  &.red {
    color: red;
  }
  &.green {
    color: green;
  }
  &:hover {
    background-color: #eee;
  }
  &:hover .title {
    font-weight: bold;
  }
  :not(&) {
    font-weight: normal;
  }
  [dir="rtl"] & {
    direction: rtl;
  }
}

// Property Declarations And Placeholder

.box {
  font-size: 20px;
  font: {
    size: 15px;
    weight: bold;
  }
  padding: 10px;
  margin: auto {
    top: 10px;
    bottom: 15px;
  }
}

%main-box {
  background-color: white;
  padding: 15px;
  border: 1px solid #ccc;
}

.ads {
  @extend %main-box;
  font-size: 20px;
  color: red;
}

.article {
  font-size: 22px;
  @extend %main-box;
  color: green;
}

// Control Flow => If And Else

$theme: "light";

.page {
  @if $theme == "light" {
    background-color: white;
    color: #444;
  } @else {
    background-color: #444;
    color: white;
  }
}

$rounded: false;

.box {
  @extend %main-box;
  border-radius: if($rounded, 6px, null);
}

// Practice On If And Else If And Else

$direction: "left";

.arrow-div {
  @extend %main-box;
  font-size: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  position: relative;
  margin: 50px auto;
  &::before {
    content: "";
    position: absolute;
    border: 20px solid transparent;

    @if $direction == "top" {
      top: -40px;
      left: 50%;
      transform: translateX(-50%);
      border-bottom-color: red;
    } @else if $direction == "right" {
      right: -40px;
      top: 50%;
      transform: translateY(-50%);
      border-left-color: red;
    } @else if $direction == "bottom" {
      bottom: -40px;
      left: 50%;
      transform: translateX(-50%);
      border-top-color: red;
    } @else if $direction == "left" {
      left: -40px;
      top: 50%;
      transform: translateY(-50%);
      border-right-color: red;
    } @else {
      @error "This Direction #{$direction} Is Not Valid";
    }
  }
}

// Interpolation

$company: "elzero";
$position: "left";

.ad-#{$company}-#{unique-id()} {
  font-size: 20px;
  background-image: url("imgs/#{$company}.png");
  #{$position}: 0;
}

.ad-#{unique-id()} {
  font-weight: bold;
}
// =======================================
// 10

// Comments

// This Comment Will Not Show In CSS File

/* This Comment Will Show In CSS File But Not In Compressed Mode */

/*! This Comment Will Show In CSS File And In Compressed Mode */

.box /* Multiple
Lines
Comment */ {
  font-size: 20px; // Inline Comment
}

/* This Comment Contains Interpolation => #{$company} */

/// Function To Do Bla Bla Bla
///
/// @param {num}
/// The Number To Deal With
/// @return {int}

// =======================================
// 11

// Mixin And Include
@mixin list-reset {
  padding: 0%;
  margin: 0%;
  list-style: none;
}

ul.links {
  @include list-reset;
}

@mixin circle($dimensions) {
  border-radius: 50%;
  width: $dimensions;
  height: $dimensions;
}

.circle-100 {
  @include circle(100px);
  background-color: red;
  color: white;
}

.circle-200 {
  @include circle(200px);
  background-color: red;
  color: white;
}

@mixin centering {
  display: flex;
  justify-content: center;
  align-items: center;
}

.center-circle {
  @include circle(400px);
  @include centering;
}

/* ============ 012 ====================*/
// Loop => For

@for $i from 1 through 10 {
  .class-#{$i} {
    font-size: #{$i + 10px};
  }
}

$dimensions: 0;

@for $i from 1 through 10 {
  .circle-#{100 + $dimensions} {
    width: $dimensions + 100px;
    height: $dimensions + 100px;
    border-radius: 50%;
  }
  $dimensions: $dimensions + 100;
}

/* ============ 013 ====================*/
// Each + Maps

$themes: red, green, blue, orange;

@each $theme in $themes {
  .#{$theme}-theme {
    .product {
      background-color: white;
      border-bottom: 2px solid $theme;
      .title {
        color: $theme;
        font-weight: bold;
      }
    }
  }
}
/* ================================*/
$socials: (
  "facebook": blue,
  "youtube": red,
  "github": black,
  "twitter": indianred,
);

@each $name, $color in $socials {
  .#{$name} {
    background-color: $color;
    color: white;
    &::before {
      content: $name;
    }
  }
}

/* ================================*/
$classes: "one" 20px red, "two" 15px green, "three" 22px blue;

@each $class, $font, $color in $classes {
  .#{$class} {
    font-size: $font;
    background-color: $color;
    color: white;
    padding: $font / 2;
  }
}
